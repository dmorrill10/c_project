THIS_DIR := $(CURDIR)/$(dir $(lastword $(MAKEFILE_LIST)))

CC = gcc -std=gnu99
CFLAGS = -O3 -g -Wall
LIBS = -lm
TARGET_SYMBOLS = -DCEXCEPTION_USE_CONFIG_FILE

VENDOR_DIR := $(THIS_DIR)/vendor/
COMMANDER_DIR := $(VENDOR_DIR)/commander.c
TARGET_INCLUDES = -I$(THIS_DIR)/src -I$(CEXCEPTION_LIB) -I$(COMMANDER_DIR)/src

CEXCEPTION_DIR := $(VENDOR_DIR)/cexception/
CEXCEPTION_LIB := $(CEXCEPTION_DIR)/lib
CEXCEPTION_SRC := $(CEXCEPTION_LIB)/CException.c

TARGET_BASE = <%= name %>
TARGET_SRC_DIR := $(THIS_DIR)/src
TARGET_SRC := $(TARGET_SRC_DIR)/$(TARGET_BASE).c $(CEXCEPTION_SRC)

BUILD_PREFIX := $(CC) $(CFLAGS) $(TARGET_SYMBOLS)

TARGET := $(THIS_DIR)/$(TARGET_BASE)

default: $(TARGET) 

# Build target
#==============
$(TARGET): $(TARGET_SRC)
	$(BUILD_PREFIX) $(TARGET_INCLUDES) $(TARGET_SRC) $(TARGET_SRC_DIR)/main.c $(COMMANDER_DIR)/src/commander.c $(PROJECT_SRC) $(LIBS) -o $@
	chmod 755 $@

# Testing
#===========
UNITY_DIR := $(VENDOR_DIR)/unity
TEST_DIR := $(THIS_DIR)/test
TEST_SUPPORT_DIR := $(TEST_DIR)/support
INC_DIRS := -I$(UNITY_DIR)/src -I$(TEST_SUPPORT_DIR) -I$(THIS_DIR)/src $(TARGET_INCLUDES)
SYMBOLS = -DTEST -DUNITY_FLOAT_TYPE=double -DUNITY_FLOAT_VERBOSE
TEST_BASE := $(TEST_DIR)/test_$(TARGET_BASE)
ifeq ($(OS),Windows_NT)
	TEST_EXTENSION=.exe
else
	TEST_EXTENSION=.out
endif

# Test 1
#-------------
TEST1_BASE := $(TEST_BASE)
TEST1_SRC := $(TEST1_BASE).c
TEST1 := $(TEST1_BASE)$(TEST_EXTENSION)
TEST1_RUNNER := $(TEST1_BASE)_Runner.c

$(TEST1_RUNNER): $(TEST1_SRC)
	ruby $(UNITY_DIR)/auto/generate_test_runner.rb $(TEST1_SRC) $(TEST1_RUNNER)

$(TEST1): $(TARGET) $(TEST1_RUNNER)
	$(BUILD_PREFIX) $(SYMBOLS) $(INC_DIRS) $(TARGET_SRC) $(PROJECT_SRC) $(TEST_SUPPORT_DIR)/test_helper.c $(UNITY_DIR)/src/unity.c $(TEST1_SRC) $(TEST1_RUNNER) $(LIBS) -o $@
	chmod 755 $@

# Automatic tests (require Ruby)
#--------------------------------
test: clean $(TEST1)
	$(TEST1)

# Clean
#============
clean:
	rm -f $(TARGET) *.o *.il *.out $(TEST1) $(TEST1_RUNNER) $(THIS_DIR)/test/*.out

# Makefile debugging
#===================
print-%:
	@echo $* = $($*)

